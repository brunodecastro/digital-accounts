{
    "swagger": "2.0",
    "info": {
        "title": "Digital Accounts API",
        "contact": {
            "name": "Bruno de Castro Oliveira",
            "email": "brunnodecastro@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/account/{account_id}/balance": {
            "get": {
                "description": "Gets the account balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Gets the account balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account Id",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/output.FindAccountBalanceOutputVO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.HttpErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.HttpErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "description": "List all accounts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "List all accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/output.FindAllAccountOutputVO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.HttpErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Creates a new account",
                "parameters": [
                    {
                        "description": "Account Input",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.CreateAccountInputVO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/output.CreateAccountOutputVO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.HttpErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.HttpErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "input.CreateAccountInputVO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "cpf": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "output.CreateAccountOutputVO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "cpf": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "output.FindAccountBalanceOutputVO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "output.FindAllAccountOutputVO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "cpf": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "response.HttpErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/response.ErrorResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 500
                }
            }
        }
    }
}